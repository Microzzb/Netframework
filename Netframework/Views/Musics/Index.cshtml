@*model IEnumerable<Netframework.Models.Music>*@
@model Netframework.ViewModels.MusicIndexViewModel
@using PagedList.Mvc
 
@{
    ViewBag.Title = "Index";
}

<head>
    @Styles.Render("~/Content/User")
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />

</head>
<div class="app">
    <div class="mod_profile">
        <div class="section_inner">
            <div class="profile_user">
                <img src="../../wwwroot/images/user.jpg" alt=" " class="profile_cover">
            </div>
            <div class="profile_tit">
                <h1>My personal account</h1>
            </div>
        </div>
    </div>
    <div class="main">
        <div class="profile_nav">
            <a class="like" href="#">The music I like</a>
            <a class="like" href="#">The song list I created</a>
            <a class="like" href="#">Focus</a>
        </div>
    </div>
</div>

<section class="td">
    <p>
        @(String.IsNullOrWhiteSpace (Model.Search)? "Showing all":"You search for" + Model.Search + " found")
        @Model.Musics.TotalItemCount songs
    </p>
    <p>
        @Html.ActionLink("Create New", "Create")
        @using (Html.BeginForm("Index", "Musics", FormMethod.Get))
        {
            <label>Filter by category:</label>
            @Html.DropDownListFor(vm => vm.Category, Model.CatFilterItems, "All");
            <label>Sort by:</label>
            @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")
            <input type="Submit" value="Filter" />
            <input type="hidden" name="Search" id="Search" value="@Model.Search" />
        }
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Musics.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Musics.First().Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Musics.First().Description)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Musics)
        {
            <tr>
                <td id="tdfirst">
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }
    </table>
    <div class="page">
        Page @(Model.Musics.PageCount <Model.Musics.PageNumber ? 0 : Model.Musics.PageNumber) of @Model.Musics.PageCount
        @Html.PagedListPager(Model.Musics, page => Url.Action("Index", new { category = Model.Category, Search = Model.Search, sortBy = Model.SortBy, page }))
    </div>
    <div class="validator">
        <a href="https://validator.w3.org/nu/?doc=http://localhost:52744/Musics/Index">Verify HTML5</a>
        <a href="https://jigsaw.w3.org/css-validator/validator?uri=http://localhost:52744/Content/user.css">Verify CSS3</a>
    </div>
</section>